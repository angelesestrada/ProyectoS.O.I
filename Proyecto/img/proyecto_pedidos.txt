--Se empieza por las tablas m√°s independientes (solo las que tienen primary key)


CREATE TABLE CLIENTE (
	ID_CLIENTE INT PRIMARY KEY,
	NOMBRE_CLIENTE VARCHAR2(50),
	TEL_CLIENTE INT,
	CORREO VARCHAR2(50),
	CONTRASENA VARCHAR2(30),
	FECHA_CREACION DATE
);

CREATE TABLE ESTADO_ENVIO(
	ID_ESTADO_ENVIO INT PRIMARY KEY,
	DESCRIPCION VARCHAR(50) 
);

CREATE TABLE TIPO_PAGO(
	ID_TIPO_PAGO INT PRIMARY KEY,
	DESCRIPCION VARCHAR(50)
);

CREATE TABLE ESTADO_PEDIDO(
	ID_ESTADO_PEDIDO INT PRIMARY KEY,
	DESCRIPCION VARCHAR(50)
);


CREATE TABLE TIPO_PRODUCTO (
	ID_TIPO_PRODUCTO INT PRIMARY KEY,
	DESCRIPCION VARCHAR2(25)
);

CREATE TABLE PROVEEDOR (
	ID_PROVEEDOR INT PRIMARY KEY,
	NOMBRE_PROVEEDOR VARCHAR2(50)
);

***************************************************
--luego se crean las tablas con llaves foraneas
***************************************************


CREATE TABLE DIRECCIONES (
	ID_DIRECCION INT PRIMARY KEY,
	ID_CLIENTE INT,
	DIRECCION VARCHAR2(60),
	FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

CREATE TABLE ENVIO (
	TRACKING INT PRIMARY KEY,
	ID_ESTADO_ENVIO INT,
	COMPANIA_ENVIO VARCHAR2(25),
	NOMBRE_TRANSPORTISTA VARCHAR2(50),
	TEL_TRANSPORTISTA INT,
	MATRICULA_VEHICULO VARCHAR2(30),
	MARCA_VEHICULO VARCHAR2(20),
	FOREIGN KEY (ID_ESTADO_ENVIO) REFERENCES ESTADO_ENVIO(ID_ESTADO_ENVIO)
);




CREATE TABLE PEDIDOS (
	ID_PEDIDO INT PRIMARY KEY,
	ID_CLIENTE INT,
	TRACKING INT,
	ID_ESTADO_PEDIDO INT,
	ID_TIPO_PAGO INT,
	F_CREACION DATE,
	DIR_PEDIDO VARCHAR2(60),
	TIPO_PAGO VARCHAR2(30),
	FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
	FOREIGN KEY (TRACKING) REFERENCES ENVIO(TRACKING),
	FOREIGN KEY (ID_ESTADO_PEDIDO) REFERENCES ESTADO_PEDIDO(ID_ESTADO_PEDIDO),
	FOREIGN KEY (ID_TIPO_PAGO) REFERENCES TIPO_PAGO(ID_TIPO_PAGO)
);


CREATE TABLE PRODUCTO (
	ID_PRODUCTO INT PRIMARY KEY,
	ID_PROVEEDOR INT,
	ID_TIPO_PRODUCTO INT, 
	NOMBRE_PRODUCTO VARCHAR2(30),
	DESCRIPCION VARCHAR2(60),
	EXISTENCIA INT, 
	PRECIO DECIMAL(9,2),
	FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR),
	FOREIGN KEY (ID_TIPO_PRODUCTO) REFERENCES TIPO_PRODUCTO(ID_TIPO_PRODUCTO)
);


CREATE TABLE DETALLE_PEDIDO (
	ID_DETALLE INT PRIMARY KEY,
	ID_PEDIDO INT,
	ID_PRODUCTO INT,
	CANTIDAD_PRODUCTO INT,
	FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS(ID_PEDIDO),
	FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);


************************
INSERTEN LOS DATOS DE ESTADO DE ENVIO

PRIMERO CREAR UNA SECUENCIA PARA EL ID ESTADO ENVIO
*************************


CREATE SEQUENCE  SEQ_EST_ENVIO
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;

***********
PROCEDIMIENTO DE INSERCION
******

CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_est_envio
(
   -- V_ID_ESTADO IN estado_envio.id_estado_envio%type,
    V_DESCRIPCION IN estado_envio.descripcion%type
)
IS 
BEGIN
    INSERT INTO ESTADO_ENVIO (ID_ESTADO_ENVIO, DESCRIPCION)
    VALUES(SEQ_EST_ENVIO.NEXTVAL, V_DESCRIPCION);
    COMMIT;
END;


*******
realizar los inserts. 
********

BEGIN
    insertar_est_envio('PENDIENTE DE RECOLECTAR');
END;

BEGIN
    insertar_est_envio('RECOLECTADO');
END;

BEGIN
    insertar_est_envio('ALMACENADO');
END;

BEGIN
    insertar_est_envio('EN RUTA');
END;

BEGIN
    insertar_est_envio('ENTREGADO');
END;



*****************************
siguiente para los clientes
*******************


CREATE SEQUENCE  SEQ_ID_CLIENTE
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_cliente
(
    V_NOMBRE IN cliente.nombre_cliente%type,
    V_TEL IN cliente.tel_cliente%type,
    V_CORREO IN cliente.correo%type,
    V_CONTRASENA IN cliente.contrasena%type,
    V_F_CREACION IN cliente.fecha_creacion%type
)
IS 
BEGIN
    INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE_CLIENTE, TEL_CLIENTE, CORREO, CONTRASENA, FECHA_CREACION)
    VALUES(SEQ_ID_CLIENTE.NEXTVAL, V_NOMBRE, V_TEL, V_CORREO, V_CONTRASENA, V_F_CREACION);
    COMMIT;
END;



BEGIN
    insertar_cliente('CARLOS PIRIR', 65542154, 'CARLOSSPIRIR@GMAIL.COM', 'carlos5', TO_DATE('2015-05-18','YYYY/MM/DD'));
END;

BEGIN
    insertar_cliente('ANGELES ESTRADA', 78547854, 'ANGELES@GMAIL.COM', '65465ADF', TO_DATE('2011-02-04','YYYY/MM/DD'));
END;

BEGIN
    insertar_cliente('MELANI VILLATORO', 98658965, 'MELANI@GMAIL.COM', 'ASDF65', TO_DATE('2018-06-25','YYYY/MM/DD'));
END;

BEGIN
    insertar_cliente('ADRIAN MACH', 65785487, 'ADRIAN@GMAIL.COM', 'ERTWER665', TO_DATE('2017-03-10','YYYY/MM/DD'));
END;

BEGIN
    insertar_cliente('KARLA CU', 98785465, 'KARLA@GMAIL.COM', 'GHLGHJ65', TO_DATE('2019-04-18','YYYY/MM/DD'));
END;

BEGIN
    insertar_cliente('JUAN PEREZ', 32563265, 'PEREZ@GMAIL.COM', 'GDFGJK', TO_DATE('2012-03-15','YYYY/MM/DD'));
END;



*************
SIGUIENTE PARA LA TABLA TIPO DE PAGOS
/**************

CREATE SEQUENCE  SEQ_TIPO_PAGO
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_tipo_pago
(
    V_DESCRIPCION IN tipo_pago.descripcion%type
)
IS 
BEGIN
    INSERT INTO TIPO_PAGO (ID_TIPO_PAGO, DESCRIPCION)
    VALUES(SEQ_TIPO_PAGO.NEXTVAL, V_DESCRIPCION);
    COMMIT;
END;


BEGIN
    insertar_tipo_pago('EFECTIVO');
END;

BEGIN
    insertar_tipo_pago('TARJETA DE DEBITO');
END;

BEGIN
    insertar_tipo_pago('TARJETA DE CREDITO');
END;

BEGIN
    insertar_tipo_pago('TRANSFERENCIA BANCARIA');
END;


*********************
siguiente para tabla estado envios
*********************

CREATE SEQUENCE  SEQ_EST_PEDIDO
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_est_pedidos
(
    V_DESCRIPCION IN estado_pedido.descripcion%type
)
IS 
BEGIN
    INSERT INTO ESTADO_PEDIDO (ID_ESTADO_PEDIDO, DESCRIPCION)
    VALUES(SEQ_EST_PEDIDO.NEXTVAL, V_DESCRIPCION);
    COMMIT;
END;


BEGIN
    insertar_est_pedidos('CREADO');
END;

BEGIN
    insertar_est_pedidos('ENVIADO');
END;

BEGIN
    insertar_est_pedidos('ENTREGADO');
END;

BEGIN
    insertar_est_pedidos('PAGO DECLINADO');
END;

BEGIN
    insertar_est_pedidos('CANCELADO');
END;


************************
SIGUIENTE PARA TABLA TIPO PRODUCTOS
*************************

CREATE SEQUENCE  SEQ_TIPO_PRODUCTO
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_tipo_producto
(
    V_DESCRIPCION IN tipo_producto.descripcion%type
)
IS 
BEGIN
    INSERT INTO TIPO_PRODUCTO (ID_TIPO_PRODUCTO, DESCRIPCION)
    VALUES(SEQ_TIPO_PRODUCTO.NEXTVAL, V_DESCRIPCION);
    COMMIT;
END;

BEGIN
    insertar_tipo_producto('DIGITAL');
END;

BEGIN
    insertar_tipo_producto('ROPA');
END;

BEGIN
    insertar_tipo_producto('CELULARES');
END;

BEGIN
    insertar_tipo_producto('CELULARES');
END;

BEGIN
    insertar_tipo_producto('LIBROS');
END;

BEGIN
    insertar_tipo_producto('ALIMENTOS');
END;

BEGIN
    insertar_tipo_producto('JARDIN Y EXTERIORES');
END;

BEGIN
    insertar_tipo_producto('VIDEO JUEGOS');
END;



***************************
SIGUIENTE PARA TABLA PROVEEDOR
***************************

CREATE SEQUENCE  SEQ_PROVEEDOR
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_proveedor
(
    V_NOMBRE IN proveedor.nombre_proveedor%type
)
IS 
BEGIN
    INSERT INTO PROVEEDOR (ID_PROVEEDOR, NOMBRE_PROVEEDOR)
    VALUES(SEQ_PROVEEDOR.NEXTVAL, V_NOMBRE);
    COMMIT;
END;


BEGIN
    insertar_proveedor('EXCELENCE PRODUCTS');
END;

BEGIN
    insertar_proveedor('XBOX');
END;

BEGIN
    insertar_proveedor('HP');
END;

BEGIN
    insertar_proveedor('SAMSUNG');
END;

BEGIN
    insertar_proveedor('VESTUARIOS');
END;

BEGIN
    insertar_proveedor('JARDIN S.A.');
END;



************************
SIGUIENTE PARA TABLA PRODUCTO
**************************

CREATE SEQUENCE  SEQ_PRODUCTO
MINVALUE 1
MAXVALUE 9999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_producto
(
    V_PROVEEDOR IN producto.id_proveedor%type,
    V_TIPO_PRODUCTO IN producto.id_tipo_producto%type,
    V_NOMBRE_PRODUCTO IN producto.nombre_producto%type,
    V_DESCRIPCION IN producto.descripcion%type,
    V_EXISTENCIA IN producto.existencia%type,
    V_PRECIO IN producto.precio%type
)
IS 
BEGIN
    INSERT INTO PRODUCTO (ID_PRODUCTO, ID_PROVEEDOR, ID_TIPO_PRODUCTO, NOMBRE_PRODUCTO, DESCRIPCION, EXISTENCIA, PRECIO)
    VALUES(SEQ_PRODUCTO.NEXTVAL, V_PROVEEDOR, V_TIPO_PRODUCTO, V_NOMBRE_PRODUCTO, V_DESCRIPCION, V_EXISTENCIA, V_PRECIO);
    COMMIT;
END;


BEGIN
    insertar_producto(2, 8, 'CALL OF DUTY', 'SHOOTING GAME', 100, 450.99);
END;

BEGIN
    insertar_producto(5, 2, 'PANTALONES', 'PANTALONES AZULES', 100, 80.00);
END;

BEGIN
    insertar_producto(4, 3, 'GALAXY S21', 'GALAXY AZUL', 100, 2000.00);
END;


BEGIN
    insertar_producto(1, 5, 'PRICIPITO', 'LIBROS', 100, 30.90);
END;

BEGIN
    insertar_producto(2, 1, 'TARJETA DE REGALO', 'TARJETA PARA TIENDAS', 100, 50.00);
END;





***********************
PARA TABLA DIRECCIONES
********************

CREATE SEQUENCE  SEQ_DIR
MINVALUE 1
MAXVALUE 99999
INCREMENT BY 1
START WITH 1;


CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.insertar_direcciones
(
    V_ID_CLIENTE IN direcciones.id_cliente%type,
    V_DIRECCION IN direcciones.direccion%type
)
IS 
BEGIN
    INSERT INTO DIRECCIONES (ID_DIRECCION, ID_CLIENTE, DIRECCION)
    VALUES(SEQ_DIR.NEXTVAL, V_ID_CLIENTE, V_DIRECCION);
    COMMIT;
END;


BEGIN
    insertar_direcciones(1, 'SAN JUAN SACATEPEQUEZ');
END;

BEGIN
    insertar_direcciones(2, 'SAN RAYMUNDO');
END;

BEGIN
    insertar_direcciones(3, 'SAN PEDRO SAC');
END;

BEGIN
    insertar_direcciones(4, 'MIXCO');
END;

BEGIN
    insertar_direcciones(5, 'SAN LUCAS SAC');
END;

BEGIN
    insertar_direcciones(6, 'ANTIGUA GUATEMALA');
END;



**************************
CREACION DE ENVIO Y PEDIDO
************************

CREATE SEQUENCE  SEQ_TRACK
MINVALUE 11100001
MAXVALUE 999999999
INCREMENT BY 1
START WITH 11100001;

CREATE SEQUENCE  SEQ_PEDIDOS
MINVALUE 11200001
MAXVALUE 999999999
INCREMENT BY 1
START WITH 11200001;




CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.INSERTAR_PEDIDO
(

    V_TRACKING IN ENVIO.TRACKING%TYPE,
    V_ESTADO IN ENVIO.ID_ESTADO_ENVIO%TYPE,
    V_COMPANIA_ENVIO IN ENVIO.COMPANIA_ENVIO%TYPE,
    V_NOMBRE_TRANSPORTISTA IN ENVIO.NOMBRE_TRANSPORTISTA%TYPE,
    V_TEL_TRANSPORTISTA IN ENVIO.TEL_TRANSPORTISTA%TYPE,
    V_MATRICULA_VEHICULO IN ENVIO.MATRICULA_VEHICULO%TYPE,
    V_MARCA_VEHICULO IN ENVIO.MARCA_VEHICULO%TYPE,

    V_ID_PEDIDO IN PEDIDOS.ID_PEDIDO%TYPE,
    V_ID_CLIENTE IN PEDIDOS.ID_CLIENTE%TYPE,
    V_ID_ESTADO IN PEDIDOS.ID_ESTADO_PEDIDO%TYPE,
    V_ID_TIPO_PAGO IN PEDIDOS.ID_TIPO_PAGO%TYPE,
    V_F_CREACION IN PEDIDOS.F_CREACION%TYPE,
    V_DIR_PEDIDO IN PEDIDOS.DIR_PEDIDO%TYPE
    
   -- V_ID_DETALLE IN DETALLE_PEDIDO.ID_DETALLE%TYPE,
  --  V_ID_PRODUCTO IN DETALLE_PEDIDO.ID_PRODUCTO%TYPE,
--    V_CANTIDAD_PRODUCTO IN DETALLE_PEDIDO.CANTIDAD_PRODUCTO%TYPE,
    
    
)
IS
BEGIN  
    INSERT INTO ENVIO(TRACKING, ID_ESTADO_ENVIO, COMPANIA_ENVIO, NOMBRE_TRANSPORTISTA, TEL_TRANSPORTISTA, MATRICULA_VEHICULO, MARCA_VEHICULO)
    VALUES(V_TRACKING, V_ESTADO, V_COMPANIA_ENVIO, V_NOMBRE_TRANSPORTISTA, V_TEL_TRANSPORTISTA, V_MATRICULA_VEHICULO, V_MARCA_VEHICULO);
    COMMIT;

    INSERT INTO PEDIDOS(ID_PEDIDO, ID_CLIENTE, TRACKING, ID_ESTADO_PEDIDO, ID_TIPO_PAGO, F_CREACION, DIR_PEDIDO)
    VALUES(V_ID_PEDIDO, V_ID_CLIENTE, V_TRACKING, V_ID_ESTADO, V_ID_TIPO_PAGO, V_F_CREACION, V_DIR_PEDIDO);
    COMMIT;

   -- INSERT INTO DETALLE_PEDIDO(ID_DETALLE, ID_PEDIDO, ID_PRODUCTO, CANTIDAD_PRODUCTO)
  --  VALUES(V_ID_DETALLE, V_ID_PEDIDO, V_ID_PRODUCTO, V_CANTIDAD_PRODUCTO);
  --  COMMIT;
END;


BEGIN
    INSERTAR_PEDIDO(SEQ_TRACK.NEXTVAL, 1, 'GUATEX', 'FERNANDO PEREZ', 56215421, 'ASDFSDF', 'TOYOTA',
    SEQ_PEDIDOS.NEXTVAL, 2, 1, 2, TO_DATE('2021-10-12', 'YYYY/MM/DD'), 'SAN JUAN SAC');
END;

BEGIN
    INSERTAR_PEDIDO(SEQ_TRACK.NEXTVAL, 1, 'GUATEX', 'CARLOS PEREZ', 98568965, 'WERWERE', 'NISSAN',
    SEQ_PEDIDOS.NEXTVAL, 3, 1, 3, TO_DATE('2021-06-15', 'YYYY/MM/DD'), 'SAN PEDRO');
END;




********************
INSERTAR PRODUCTOS EN UNA ORDEN
*******************

*****
CREAR ESTE TRIGGER
****


CREATE OR REPLACE TRIGGER TR_EXISTENCIA
--MOMENTO
    AFTER INSERT ON DETALLE_PEDIDO
    REFERENCING NEW AS NEW
    FOR EACH ROW
    
    DECLARE 
    V_EXISTENCIA INT;
    V_ACTUALIZAR_EXISTENCIA INT;

--CONDICION
    BEGIN
    
    SELECT EXISTENCIA INTO V_EXISTENCIA FROM PRODUCTO
        WHERE ID_PRODUCTO = :NEW.ID_PRODUCTO;
    
        V_ACTUALIZAR_EXISTENCIA := V_EXISTENCIA - :NEW.CANTIDAD_PRODUCTO;  --RESTAR LA CANTIDAD DE PRODUCTO A LA EXISTENCIA

        UPDATE PRODUCTO
        SET EXISTENCIA = V_ACTUALIZAR_EXISTENCIA
        WHERE ID_PRODUCTO = :NEW.ID_PRODUCTO;

    END;

    *******
    CREAR SEQUENCIA PARA ID DETALLE Y PROCEDIMIENTO PARA INSERT
    *******


CREATE SEQUENCE  SEQ_DET_PEDIDO
MINVALUE 1
MAXVALUE 999999999
INCREMENT BY 1
START WITH 3;




CREATE OR REPLACE PROCEDURE PROYECTO_PEDIDOS.INSERTAR_DET_PEDIDO
(
    V_ID_PEDIDO IN detalle_pedido.id_pedido%type,
    V_ID_PRODUCTO IN detalle_pedido.id_producto%type,
    V_CANTIDAD IN detalle_pedido.cantidad_producto%type
)
IS
BEGIN  
    INSERT INTO DETALLE_PEDIDO(ID_DETALLE, ID_PEDIDO, ID_PRODUCTO, CANTIDAD_PRODUCTO)
    VALUES(SEQ_DET_PEDIDO.NEXTVAL, V_ID_PEDIDO, V_ID_PRODUCTO, V_CANTIDAD);
    COMMIT;
END;


*****
ESTOS SON LOS INSERTS DE PRODUCTOS PARA 2 PEDIDOS
*****

BEGIN 
    INSERTAR_DET_PEDIDO(11200001, 1, 3);
END;

BEGIN 
    INSERTAR_DET_PEDIDO(11200001, 3, 1);
END;

BEGIN 
    INSERTAR_DET_PEDIDO(11200002, 2, 1);
    INSERTAR_DET_PEDIDO(11200002, 5, 1);
END;


SELECT * FROM CLIENTE;

SELECT * FROM DETALLE_PEDIDO;

SELECT * FROM ENVIO;

SELECT * FROM ESTADO_ENVIO;

SELECT * FROM ESTADO_PEDIDO;

SELECT * FROM PEDIDOS;

SELECT * FROM PRODUCTO;

SELECT * FROM PROVEEDOR;

SELECT * FROM TIPO_PAGO;

SELECT * FROM TIPO_PRODUCTO;

